{"version":3,"sources":["../../lib/data.lib.js"],"names":[],"mappings":"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","file":"data.lib.js","sourcesContent":["'use strict';\n\nclass DataOperations {\n    static fieldEmpty(fieldArray) {\n        for (let i = 0; i < fieldArray.length; i++) {\n            if (fieldArray[i] === '') {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    static getPads(padChar, howMany) {\n        return (new Array(howMany + 1)).join(padChar);\n    }\n\n    static asciiToBase64(asciiString) {\n        return Buffer.from(asciiString, 'utf-8').toString('base64');\n    }\n\n    static base64ToAscii(base64String) {\n        return Buffer.from(base64String, 'base64').toString('utf-8');\n    }\n\n    static removeNullCharsFromAscii(asciiString) {\n        return asciiString.replace(/\\u0000/g, '');\n    }\n\n    static numericArrayToHexstring(ba) {\n        let st = '';\n        for (let i = 0; i < ba.length; i++) {\n            const item = ba[i];\n            let hex = item.toString(16);\n            if (hex.length < 2) hex = `0${hex}`;\n            st += hex;\n        }\n        return st;\n    }\n\n    static hexstringToData(hexString) {\n        let hex = hexString;\n        hex = hex.replace(/\\s/g, ''); // eliminate spaces\n\n        const keyar = hex.match(/../g); // break into array of doublets\n\n        let s = '';  // holder for our return value\n\n        for (let i = 0; i < keyar.length; i++) {\n            s += String.fromCharCode(Number(`0x${keyar[i]}`));\n        }\n\n        return s;\n    }\n\n    static hexstringToNumericArray(hexString) {\n        let hex = hexString;\n        hex = hex.replace(/\\s/g, ''); // eliminate spaces\n\n        const keyar = hex.match(/../g); // break into array of doublets\n\n        const s = [];  // holder for our return value\n\n        for (let i = 0; i < keyar.length; i++) {\n            s.push(Number(`0x${keyar[i]}`));\n        }\n\n        return s;\n    }\n\n    static dataToHexstring(d) {\n        let hex = '';\n        for (let i = 0; i < d.length; i++) {\n            let h = (d.charCodeAt(i)).toString(16);\n            if (h.length < 2) h = `0${h}`;\n            hex += h;\n        }\n        return hex.toUpperCase();\n    }\n\n    static XORdata(data1, data2) {\n        let d1 = data1;\n        let d2 = data2;\n        if (d1.length < d2.length) {\n            while (d1.length < d2.length) {\n                d1 = `\\0${d1}`;\n            } // prepend with nulls\n        }\n\n        if (d1.length > d2.length) {\n            while (d1.length > d2.length) {\n                d2 = `\\0${d2}`;\n            } // prepend with nulls\n        }\n\n        let output = '';\n\n        for (let i = 0; i < d1.length; i++) {\n            const result = d1.charCodeAt(i) ^ d2.charCodeAt(i);\n            output += String.fromCharCode(result);\n        }\n\n        return output;\n    }\n\n    static XORdataHex(d1, d2) {\n        let data1 = DataOperations.hexstringToData(d1);\n        let data2 = DataOperations.hexstringToData(d2);\n\n        if (data1.length < data2.length) {\n            while (data1.length < data2.length) {\n                data1 = `\\0${data1}`;\n            } // prepend with nulls\n        }\n\n        if (data1.length > data2.length) {\n            while (data1.length > data2.length) {\n                data2 = `\\0${data2}`;\n            } // prepend with nulls\n        }\n\n        let output = '';\n\n        for (let i = 0; i < data1.length; i++) {\n            const result = data1.charCodeAt(i) ^ data2.charCodeAt(i);\n            output += String.fromCharCode(result);\n        }\n\n        return DataOperations.dataToHexstring(output);\n    }\n\n    static ANDdata(data1, data2) {\n        let d1 = data1;\n        let d2 = data2;\n        if (d1.length < d2.length) {\n            while (d1.length < d2.length) {\n                d1 = `\\0${d1}`;\n            } // prepend with nulls\n        }\n\n        if (d1.length > d2.length) {\n            while (d1.length > d2.length) {\n                d2 = `\\0${d2}`;\n            } // prepend with nulls\n        }\n\n        let output = '';\n\n        for (let i = 0; i < d1.length; i++) {\n            const result = d1.charCodeAt(i) & d2.charCodeAt(i);\n            output += String.fromCharCode(result);\n        }\n\n        return output;\n    }\n\n    static hexToText(hex) {\n        let h = hex;\n\n        function isASCII(s) {\n            return s >= 32 && s < 127;\n        }\n\n        h = h.replace(/\\s/g, ''); // eliminate spaces\n\n        const SPECIAL = '.'; // String.fromCharCode(9744);\n        const symbols = h.match(/../g);\n        const output = [];\n        for (let i = 0; i < symbols.length; i++) {\n            const s = symbols[i];\n            const sDecimal = Number(`0x${s}`);\n            output.push(isASCII(sDecimal) ?\n                String.fromCharCode(sDecimal) : SPECIAL);\n        }\n        return output.join('');\n    }\n}\n\nmodule.exports = DataOperations;\n"]}